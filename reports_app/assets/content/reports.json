{
    "performance": {
        "title": "Performance",
        "content1": [
            {
                "title": "Static profiling",
                "content": [
                    {
                        "subtitle": "How did we do it?"
                    },
                    {
                        "text": "The static profiling tool used was Dart Analyzer. It is available on Visual Code Studio, included in either Flutter’s or Dart’s plugin. Having used this profiler for the project, we found that it’s very useful in alerting errors and warnings opportunely."
                    },
                    {
                        "subtitle": "Results"
                    },
                    {
                        "text": "Static profiling detected 94 problems spread across 17 files. "
                    },
                    {
                        "image": "assets/images/home/2T2000s.png"
                    }
                ]
            },
            {
                "title": "Multithreading",
                "content": [
                    {
                        "subtitle": "Threading in this app"
                    },
                    {
                        "text": "This app has no actual multithreading, i.e., no isolates were used, and thus all the developed code runs in a single thread.\nOn the other hand, asynchronous calls are handled with simple placeholders, like using CircularProgressIndicators when there is no data available."
                    },
                    {
                        "image": "assets/images/home/2T2000s.png"
                    }
                ]
            },
            {
                "title": "CPU",
                "content": [
                    {
                        "subtitle": "How did we do it?"
                    },
                    {
                        "text": "We used an application made for profiling general performance on a mobile device (Simple System Monitor) and it helped us to measure CPU usage. The following tests were made on a Huawei Mate 10 Pro (6GB RAM, 8-core (4-2.32 Mhz, 4-1.86 Mhz) and 128 GB Storage), and every app was open on a sandbox environment with no other processes in background but main operating system."
                    },
                    {
                        "subtitle": "Tests"
                    },
                    {
                        "text": "Tests took about 500 seconds as profiling app allowed. This information provides average frequency used by each one of cores used during the test. Main features of the applications were used and we tried not to open external applications (e.g. Youtube, web browser, etc.)."
                    },
                    {
                        "subtitle": "Initial state"
                    },
                    {
                        "image": "assets/images/performance/cpu_usage_initial.jpg"
                    },
                    {
                        "subtitle": "Final state"
                    },
                    {
                        "image": "assets/images/performance/cpu_usage_2T2000S.jpg"
                    },
                    {
                        "subtitle": "Analysis"
                    },
                    {
                        "text": "Four of the cores are being used by native processes and only when we opened 2T2000S the other ones assisted. The average frequency of CPU usage were 1.45 GHz, which is about 250% more than initial state."
                    }
                ]
            },
            {
                "title": "Memory",
                "content": [
                    {
                        "subtitle": "How did we do it?"
                    },
                    {
                        "text": "Same as CPU analysis, we used Simple System Monitor app and it helped us to measure memory usage. The following tests were made on a Huawei Mate 10 Pro (6GB RAM, 8-core (4-2.32 Mhz, 4-1.86 Mhz) and 128 GB Storage), and every app was open on a sandbox environment with no other processes in background but main operating system features on Android."
                    },
                    {
                        "subtitle": "Tests"
                    },
                    {
                        "text": "Tests took about 500 seconds as profiling app allowed. This information shows average memory bytes used during the test. Main features of the applications were used and we tried not to open external applications (e.g. Youtube, web browser, etc.). It is important to know that exists an increasing values at the end of the test because of opening the app and taking the screenshot."
                    },
                    {
                        "subtitle": "Initial state"
                    },
                    {
                        "image": "assets/images/performance/memory_usage_initial.jpg"
                    },
                    {
                        "subtitle": "Final state"
                    },
                    {
                        "image": "assets/images/performance/memory_usage_2T2000S.jpg"
                    },
                    {
                        "subtitle": "Analysis"
                    },
                    {
                        "text": "Device tries to use the most bytes of memory as possible in order to provide proficient performance. 2T2000S app takes about 900 MB extra compared to initial state (sandbox empty environment)."
                    }
                ]
            },
            {
                "title": "Battery",
                "content": [
                    {
                        "subtitle": "Tests and strategy"
                    },
                    {
                        "text": "The test was to use the application for 15 minutes and observing the energy expenditure in the device (same device as CPU and memory section). The battery usage information was provided by operating system native features that measured spent energy by app."
                    },
                    {
                        "subtitle": "Energy consumption"
                    },
                    {
                        "image": "assets/images/performance/battery_usage_2T2000S.jpg"
                    },
                    {
                        "subtitle": "Analysis"
                    },
                    {
                        "text": "2T2000S did not use CPU on background unlike other apps (Facebook, Instagram, SpaceX-Go, ...). Also, the power consumption is 90 mAh (average) every 15 minutes in this device using common apps, and this application used 50.81 mAh (55% less)."
                    }
                ]
            }
        ],
        "content2": [
            {
                "title": "Static profiling",
                "content": [
                    {
                        "subtitle": "How did we do it?"
                    },
                    {
                        "text": "The static profiling tool used was Dart Analyzer. It is available on Visual Code Studio, included in either Flutter’s or Dart’s plugin. Having used this profiler for the project, we found that it’s very useful in alerting errors and warnings opportunely."
                    },
                    {
                        "subtitle": "Results"
                    },
                    {
                        "text": "Static profiling detected 94 problems spread across 17 files. "
                    },
                    {
                        "image": "assets/images/home/2T2000s.png"
                    }
                ]
            },
            {
                "title": "Multithreading",
                "content": [
                    {
                        "subtitle": "Threading in this app"
                    },
                    {
                        "text": "This app has no actual multithreading, i.e., no isolates were used, and thus all the developed code runs in a single thread.\nOn the other hand, asynchronous calls are handled with simple placeholders, like using CircularProgressIndicators when there is no data available."
                    },
                    {
                        "image": "assets/images/home/2T2000s.png"
                    }
                ]
            },
            {
                "title": "CPU",
                "content": [
                    {
                        "subtitle": "How did we do it?"
                    },
                    {
                        "text": "We used an application made for profiling general performance on a mobile device (Simple System Monitor) and it helped us to measure CPU usage. The following tests were made on a Huawei Mate 10 Pro (6GB RAM, 8-core (4-2.32 Mhz, 4-1.86 Mhz) and 128 GB Storage), and every app was open on a sandbox environment with no other processes in background but main operating system."
                    },
                    {
                        "subtitle": "Tests"
                    },
                    {
                        "text": "Tests took about 500 seconds as profiling app allowed. This information provides average frequency used by each one of cores used during the test. Main features of the applications were used and we tried not to open external applications (e.g. Youtube, web browser, etc.)."
                    },
                    {
                        "subtitle": "Initial state"
                    },
                    {
                        "image": "assets/images/performance/cpu_usage_initial.jpg"
                    },
                    {
                        "subtitle": "Final state"
                    },
                    {
                        "image": "assets/images/performance/cpu_usage_spacex.jpg"
                    },
                    {
                        "subtitle": "Analysis"
                    },
                    {
                        "text": "Four of the cores are being used by native processes and only when we opened SpaceX-Go the other ones assisted. The average frequency of CPU usage were 1.45 GHz, which is about 250% more than initial state."
                    }
                ]
            },
            {
                "title": "Memory",
                "content": [
                    {
                        "subtitle": "How did we do it?"
                    },
                    {
                        "text": "Same as CPU analysis, we used Simple System Monitor app and it helped us to measure memory usage. The following tests were made on a Huawei Mate 10 Pro (6GB RAM, 8-core (4-2.32 Mhz, 4-1.86 Mhz) and 128 GB Storage), and every app was open on a sandbox environment with no other processes in background but main operating system features on Android."
                    },
                    {
                        "subtitle": "Tests"
                    },
                    {
                        "text": "Tests took about 500 seconds as profiling app allowed. This information shows average memory bytes used during the test. Main features of the applications were used and we tried not to open external applications (e.g. Youtube, web browser, etc.). It is important to know that exists an increasing values at the end of the test because of opening the app and taking the screenshot."
                    },
                    {
                        "subtitle": "Initial state"
                    },
                    {
                        "image": "assets/images/performance/memory_usage_initial.jpg"
                    },
                    {
                        "subtitle": "Final state"
                    },
                    {
                        "image": "assets/images/performance/memory_usage_spacex.jpg"
                    },
                    {
                        "subtitle": "Analysis"
                    },
                    {
                        "text": "Device tries to use the most bytes of memory as possible in order to provide proficient performance. SpaceX-Go app takes about 1300 MB extra compared to initial state (sandbox empty environment)."
                    }
                ]
            },
            {
                "title": "Battery",
                "content": [
                    {
                        "subtitle": "Tests and strategy"
                    },
                    {
                        "text": "The test was to use the application for 15 minutes and observing the energy expenditure in the device (same device as CPU and memory section). The battery usage information was provided by operating system native features that measured spent energy by app."
                    },
                    {
                        "subtitle": "Energy consumption"
                    },
                    {
                        "image": "assets/images/performance/battery_usage_spacex.jpg"
                    },
                    {
                        "subtitle": "Analysis"
                    },
                    {
                        "text": "SpaceX-Go app did use CPU on background and consumed 11 mAh (20% higher) more than 2T2000S. This may be because SpaceX-GO makes a greater number of queries to obtain the information."
                    }
                ]
            }
        ],
        "color": "0xFF498467"
    },
    "storage": {
        "title": "Storage & Data Handling",
        "content1": [],
        "content2": [],
        "color": "0xFF1B4079"
    },
    "rendering": {
        "title": "Rendering and Animations",
        "content1": [],
        "content2": [],
        "color": "0xFFDA2C38"
    },
    "connectivity": {
        "title": "Connectivity",
        "content1": [],
        "content2": [],
        "color": "0xFFFFC145"
    },
    "code": {
        "title": "Code structure",
        "content1": [],
        "content2": [],
        "color": "0xFF4B2142"
    }
}